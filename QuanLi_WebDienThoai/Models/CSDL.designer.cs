#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLi_WebDienThoai.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDIENTHOAI")]
	public partial class CSDLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTiet_DonHang(ChiTiet_DonHang instance);
    partial void UpdateChiTiet_DonHang(ChiTiet_DonHang instance);
    partial void DeleteChiTiet_DonHang(ChiTiet_DonHang instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertChiTiet_KhuyenMai(ChiTiet_KhuyenMai instance);
    partial void UpdateChiTiet_KhuyenMai(ChiTiet_KhuyenMai instance);
    partial void DeleteChiTiet_KhuyenMai(ChiTiet_KhuyenMai instance);
    partial void InsertDanhGia(DanhGia instance);
    partial void UpdateDanhGia(DanhGia instance);
    partial void DeleteDanhGia(DanhGia instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLoai_San_Pham(Loai_San_Pham instance);
    partial void UpdateLoai_San_Pham(Loai_San_Pham instance);
    partial void DeleteLoai_San_Pham(Loai_San_Pham instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSan_Pham(San_Pham instance);
    partial void UpdateSan_Pham(San_Pham instance);
    partial void DeleteSan_Pham(San_Pham instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    #endregion
		
		public CSDLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLDIENTHOAIConnectionString7"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTiet_DonHang> ChiTiet_DonHangs
		{
			get
			{
				return this.GetTable<ChiTiet_DonHang>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<ChiTiet_KhuyenMai> ChiTiet_KhuyenMais
		{
			get
			{
				return this.GetTable<ChiTiet_KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<DanhGia> DanhGias
		{
			get
			{
				return this.GetTable<DanhGia>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<Loai_San_Pham> Loai_San_Phams
		{
			get
			{
				return this.GetTable<Loai_San_Pham>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<San_Pham> San_Phams
		{
			get
			{
				return this.GetTable<San_Pham>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTiet_DonHang")]
	public partial class ChiTiet_DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _SanPham_id;
		
		private System.Nullable<int> _DonHang_id;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<San_Pham> _San_Pham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnSanPham_idChanging(System.Nullable<int> value);
    partial void OnSanPham_idChanged();
    partial void OnDonHang_idChanging(System.Nullable<int> value);
    partial void OnDonHang_idChanged();
    #endregion
		
		public ChiTiet_DonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._San_Pham = default(EntityRef<San_Pham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPham_id", DbType="Int")]
		public System.Nullable<int> SanPham_id
		{
			get
			{
				return this._SanPham_id;
			}
			set
			{
				if ((this._SanPham_id != value))
				{
					if (this._San_Pham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPham_idChanging(value);
					this.SendPropertyChanging();
					this._SanPham_id = value;
					this.SendPropertyChanged("SanPham_id");
					this.OnSanPham_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHang_id", DbType="Int")]
		public System.Nullable<int> DonHang_id
		{
			get
			{
				return this._DonHang_id;
			}
			set
			{
				if ((this._DonHang_id != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHang_idChanging(value);
					this.SendPropertyChanging();
					this._DonHang_id = value;
					this.SendPropertyChanged("DonHang_id");
					this.OnDonHang_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTiet_DonHang", Storage="_DonHang", ThisKey="DonHang_id", OtherKey="id", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTiet_DonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_DonHangs.Add(this);
						this._DonHang_id = value.id;
					}
					else
					{
						this._DonHang_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_ChiTiet_DonHang", Storage="_San_Pham", ThisKey="SanPham_id", OtherKey="id", IsForeignKey=true)]
		public San_Pham San_Pham
		{
			get
			{
				return this._San_Pham.Entity;
			}
			set
			{
				San_Pham previousValue = this._San_Pham.Entity;
				if (((previousValue != value) 
							|| (this._San_Pham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._San_Pham.Entity = null;
						previousValue.ChiTiet_DonHangs.Remove(this);
					}
					this._San_Pham.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_DonHangs.Add(this);
						this._SanPham_id = value.id;
					}
					else
					{
						this._SanPham_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("San_Pham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _Role_id;
		
		private string _Name;
		
		private string _Email;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
		private string _Password;
		
		private string _GioiTinh;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRole_idChanging(System.Nullable<int> value);
    partial void OnRole_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    #endregion
		
		public User()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_id", DbType="Int")]
		public System.Nullable<int> Role_id
		{
			get
			{
				return this._Role_id;
			}
			set
			{
				if ((this._Role_id != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_idChanging(value);
					this.SendPropertyChanging();
					this._Role_id = value;
					this.SendPropertyChanged("Role_id");
					this.OnRole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DanhGia", Storage="_DanhGias", ThisKey="id", OtherKey="User_id")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DonHang", Storage="_DonHangs", ThisKey="id", OtherKey="User_id")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="Role_id", OtherKey="id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Role_id = value.id;
					}
					else
					{
						this._Role_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTiet_KhuyenMai")]
	public partial class ChiTiet_KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _KhuyenMai_id;
		
		private System.Nullable<int> _SanPham_id;
		
		private System.Nullable<System.DateTime> _NgayBD;
		
		private System.Nullable<System.DateTime> _NgayKT;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
		private EntityRef<San_Pham> _San_Pham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnKhuyenMai_idChanging(System.Nullable<int> value);
    partial void OnKhuyenMai_idChanged();
    partial void OnSanPham_idChanging(System.Nullable<int> value);
    partial void OnSanPham_idChanged();
    partial void OnNgayBDChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBDChanged();
    partial void OnNgayKTChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKTChanged();
    #endregion
		
		public ChiTiet_KhuyenMai()
		{
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			this._San_Pham = default(EntityRef<San_Pham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuyenMai_id", DbType="Int")]
		public System.Nullable<int> KhuyenMai_id
		{
			get
			{
				return this._KhuyenMai_id;
			}
			set
			{
				if ((this._KhuyenMai_id != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhuyenMai_idChanging(value);
					this.SendPropertyChanging();
					this._KhuyenMai_id = value;
					this.SendPropertyChanged("KhuyenMai_id");
					this.OnKhuyenMai_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPham_id", DbType="Int")]
		public System.Nullable<int> SanPham_id
		{
			get
			{
				return this._SanPham_id;
			}
			set
			{
				if ((this._SanPham_id != value))
				{
					if (this._San_Pham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPham_idChanging(value);
					this.SendPropertyChanging();
					this._SanPham_id = value;
					this.SendPropertyChanged("SanPham_id");
					this.OnSanPham_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKT", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKT
		{
			get
			{
				return this._NgayKT;
			}
			set
			{
				if ((this._NgayKT != value))
				{
					this.OnNgayKTChanging(value);
					this.SendPropertyChanging();
					this._NgayKT = value;
					this.SendPropertyChanged("NgayKT");
					this.OnNgayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChiTiet_KhuyenMai", Storage="_KhuyenMai", ThisKey="KhuyenMai_id", OtherKey="id", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.ChiTiet_KhuyenMais.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_KhuyenMais.Add(this);
						this._KhuyenMai_id = value.id;
					}
					else
					{
						this._KhuyenMai_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_ChiTiet_KhuyenMai", Storage="_San_Pham", ThisKey="SanPham_id", OtherKey="id", IsForeignKey=true)]
		public San_Pham San_Pham
		{
			get
			{
				return this._San_Pham.Entity;
			}
			set
			{
				San_Pham previousValue = this._San_Pham.Entity;
				if (((previousValue != value) 
							|| (this._San_Pham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._San_Pham.Entity = null;
						previousValue.ChiTiet_KhuyenMais.Remove(this);
					}
					this._San_Pham.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_KhuyenMais.Add(this);
						this._SanPham_id = value.id;
					}
					else
					{
						this._SanPham_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("San_Pham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGia")]
	public partial class DanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _User_id;
		
		private System.Nullable<int> _SanPham_id;
		
		private string _NoiDung;
		
		private System.Nullable<int> _Vote;
		
		private EntityRef<User> _User;
		
		private EntityRef<San_Pham> _San_Pham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUser_idChanging(System.Nullable<int> value);
    partial void OnUser_idChanged();
    partial void OnSanPham_idChanging(System.Nullable<int> value);
    partial void OnSanPham_idChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnVoteChanging(System.Nullable<int> value);
    partial void OnVoteChanged();
    #endregion
		
		public DanhGia()
		{
			this._User = default(EntityRef<User>);
			this._San_Pham = default(EntityRef<San_Pham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_id", DbType="Int")]
		public System.Nullable<int> User_id
		{
			get
			{
				return this._User_id;
			}
			set
			{
				if ((this._User_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_idChanging(value);
					this.SendPropertyChanging();
					this._User_id = value;
					this.SendPropertyChanged("User_id");
					this.OnUser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPham_id", DbType="Int")]
		public System.Nullable<int> SanPham_id
		{
			get
			{
				return this._SanPham_id;
			}
			set
			{
				if ((this._SanPham_id != value))
				{
					if (this._San_Pham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPham_idChanging(value);
					this.SendPropertyChanging();
					this._SanPham_id = value;
					this.SendPropertyChanged("SanPham_id");
					this.OnSanPham_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vote", DbType="Int")]
		public System.Nullable<int> Vote
		{
			get
			{
				return this._Vote;
			}
			set
			{
				if ((this._Vote != value))
				{
					this.OnVoteChanging(value);
					this.SendPropertyChanging();
					this._Vote = value;
					this.SendPropertyChanged("Vote");
					this.OnVoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DanhGia", Storage="_User", ThisKey="User_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._User_id = value.id;
					}
					else
					{
						this._User_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_DanhGia", Storage="_San_Pham", ThisKey="SanPham_id", OtherKey="id", IsForeignKey=true)]
		public San_Pham San_Pham
		{
			get
			{
				return this._San_Pham.Entity;
			}
			set
			{
				San_Pham previousValue = this._San_Pham.Entity;
				if (((previousValue != value) 
							|| (this._San_Pham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._San_Pham.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._San_Pham.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._SanPham_id = value.id;
					}
					else
					{
						this._SanPham_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("San_Pham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _GhiChu;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<int> _User_id;
		
		private EntitySet<ChiTiet_DonHang> _ChiTiet_DonHangs;
		
		private EntityRef<ThanhToan> _ThanhToan;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    partial void OnUser_idChanging(System.Nullable<int> value);
    partial void OnUser_idChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTiet_DonHangs = new EntitySet<ChiTiet_DonHang>(new Action<ChiTiet_DonHang>(this.attach_ChiTiet_DonHangs), new Action<ChiTiet_DonHang>(this.detach_ChiTiet_DonHangs));
			this._ThanhToan = default(EntityRef<ThanhToan>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_id", DbType="Int")]
		public System.Nullable<int> User_id
		{
			get
			{
				return this._User_id;
			}
			set
			{
				if ((this._User_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_idChanging(value);
					this.SendPropertyChanging();
					this._User_id = value;
					this.SendPropertyChanged("User_id");
					this.OnUser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTiet_DonHang", Storage="_ChiTiet_DonHangs", ThisKey="id", OtherKey="DonHang_id")]
		public EntitySet<ChiTiet_DonHang> ChiTiet_DonHangs
		{
			get
			{
				return this._ChiTiet_DonHangs;
			}
			set
			{
				this._ChiTiet_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_ThanhToan", ThisKey="id", OtherKey="DonHang_id", IsUnique=true, IsForeignKey=false)]
		public ThanhToan ThanhToan
		{
			get
			{
				return this._ThanhToan.Entity;
			}
			set
			{
				ThanhToan previousValue = this._ThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._ThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhToan.Entity = null;
						previousValue.DonHang = null;
					}
					this._ThanhToan.Entity = value;
					if ((value != null))
					{
						value.DonHang = this;
					}
					this.SendPropertyChanged("ThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DonHang", Storage="_User", ThisKey="User_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._User_id = value.id;
					}
					else
					{
						this._User_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayPhanHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayPhanHoiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayPhanHoiChanged();
    #endregion
		
		public Feedback()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(255)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayPhanHoi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayPhanHoi
		{
			get
			{
				return this._NgayPhanHoi;
			}
			set
			{
				if ((this._NgayPhanHoi != value))
				{
					this.OnNgayPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._NgayPhanHoi = value;
					this.SendPropertyChanged("NgayPhanHoi");
					this.OnNgayPhanHoiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Images")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _SanPham_id;
		
		private EntityRef<San_Pham> _San_Pham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSanPham_idChanging(System.Nullable<int> value);
    partial void OnSanPham_idChanged();
    #endregion
		
		public Image()
		{
			this._San_Pham = default(EntityRef<San_Pham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPham_id", DbType="Int")]
		public System.Nullable<int> SanPham_id
		{
			get
			{
				return this._SanPham_id;
			}
			set
			{
				if ((this._SanPham_id != value))
				{
					if (this._San_Pham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPham_idChanging(value);
					this.SendPropertyChanging();
					this._SanPham_id = value;
					this.SendPropertyChanged("SanPham_id");
					this.OnSanPham_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_Image", Storage="_San_Pham", ThisKey="SanPham_id", OtherKey="id", IsForeignKey=true)]
		public San_Pham San_Pham
		{
			get
			{
				return this._San_Pham.Entity;
			}
			set
			{
				San_Pham previousValue = this._San_Pham.Entity;
				if (((previousValue != value) 
							|| (this._San_Pham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._San_Pham.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._San_Pham.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._SanPham_id = value.id;
					}
					else
					{
						this._SanPham_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("San_Pham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<double> _Gia;
		
		private EntitySet<ChiTiet_KhuyenMai> _ChiTiet_KhuyenMais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._ChiTiet_KhuyenMais = new EntitySet<ChiTiet_KhuyenMai>(new Action<ChiTiet_KhuyenMai>(this.attach_ChiTiet_KhuyenMais), new Action<ChiTiet_KhuyenMai>(this.detach_ChiTiet_KhuyenMais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChiTiet_KhuyenMai", Storage="_ChiTiet_KhuyenMais", ThisKey="id", OtherKey="KhuyenMai_id")]
		public EntitySet<ChiTiet_KhuyenMai> ChiTiet_KhuyenMais
		{
			get
			{
				return this._ChiTiet_KhuyenMais;
			}
			set
			{
				this._ChiTiet_KhuyenMais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTiet_KhuyenMais(ChiTiet_KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_ChiTiet_KhuyenMais(ChiTiet_KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loai_San_Pham")]
	public partial class Loai_San_Pham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private EntitySet<San_Pham> _San_Phams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Loai_San_Pham()
		{
			this._San_Phams = new EntitySet<San_Pham>(new Action<San_Pham>(this.attach_San_Phams), new Action<San_Pham>(this.detach_San_Phams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_San_Pham_San_Pham", Storage="_San_Phams", ThisKey="id", OtherKey="Loai_San_Pham_id")]
		public EntitySet<San_Pham> San_Phams
		{
			get
			{
				return this._San_Phams;
			}
			set
			{
				this._San_Phams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_San_Phams(San_Pham entity)
		{
			this.SendPropertyChanging();
			entity.Loai_San_Pham = this;
		}
		
		private void detach_San_Phams(San_Pham entity)
		{
			this.SendPropertyChanging();
			entity.Loai_San_Pham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="id", OtherKey="Role_id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.San_Pham")]
	public partial class San_Pham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<double> _Gia;
		
		private string _GioiThieu;
		
		private string _MoTa;
		
		private string _ThuongHieu;
		
		private string _ManHinh;
		
		private string _DoPhanGiai;
		
		private string _Camera;
		
		private string _Cpu;
		
		private string _Pin;
		
		private System.Nullable<System.DateTime> _NgayPhatHanh;
		
		private string _DungLuong;
		
		private string _KichThuoc;
		
		private string _TrongLuong;
		
		private System.Nullable<int> _SoLuongCon;
		
		private System.Nullable<int> _Loai_San_Pham_id;
		
		private EntitySet<ChiTiet_DonHang> _ChiTiet_DonHangs;
		
		private EntitySet<ChiTiet_KhuyenMai> _ChiTiet_KhuyenMais;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<Image> _Images;
		
		private EntityRef<Loai_San_Pham> _Loai_San_Pham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    partial void OnGioiThieuChanging(string value);
    partial void OnGioiThieuChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnThuongHieuChanging(string value);
    partial void OnThuongHieuChanged();
    partial void OnManHinhChanging(string value);
    partial void OnManHinhChanged();
    partial void OnDoPhanGiaiChanging(string value);
    partial void OnDoPhanGiaiChanged();
    partial void OnCameraChanging(string value);
    partial void OnCameraChanged();
    partial void OnCpuChanging(string value);
    partial void OnCpuChanged();
    partial void OnPinChanging(string value);
    partial void OnPinChanged();
    partial void OnNgayPhatHanhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayPhatHanhChanged();
    partial void OnDungLuongChanging(string value);
    partial void OnDungLuongChanged();
    partial void OnKichThuocChanging(string value);
    partial void OnKichThuocChanged();
    partial void OnTrongLuongChanging(string value);
    partial void OnTrongLuongChanged();
    partial void OnSoLuongConChanging(System.Nullable<int> value);
    partial void OnSoLuongConChanged();
    partial void OnLoai_San_Pham_idChanging(System.Nullable<int> value);
    partial void OnLoai_San_Pham_idChanged();
    #endregion
		
		public San_Pham()
		{
			this._ChiTiet_DonHangs = new EntitySet<ChiTiet_DonHang>(new Action<ChiTiet_DonHang>(this.attach_ChiTiet_DonHangs), new Action<ChiTiet_DonHang>(this.detach_ChiTiet_DonHangs));
			this._ChiTiet_KhuyenMais = new EntitySet<ChiTiet_KhuyenMai>(new Action<ChiTiet_KhuyenMai>(this.attach_ChiTiet_KhuyenMais), new Action<ChiTiet_KhuyenMai>(this.detach_ChiTiet_KhuyenMais));
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._Loai_San_Pham = default(EntityRef<Loai_San_Pham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiThieu", DbType="NVarChar(MAX)")]
		public string GioiThieu
		{
			get
			{
				return this._GioiThieu;
			}
			set
			{
				if ((this._GioiThieu != value))
				{
					this.OnGioiThieuChanging(value);
					this.SendPropertyChanging();
					this._GioiThieu = value;
					this.SendPropertyChanged("GioiThieu");
					this.OnGioiThieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuongHieu", DbType="NVarChar(100)")]
		public string ThuongHieu
		{
			get
			{
				return this._ThuongHieu;
			}
			set
			{
				if ((this._ThuongHieu != value))
				{
					this.OnThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ThuongHieu = value;
					this.SendPropertyChanged("ThuongHieu");
					this.OnThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManHinh", DbType="NVarChar(100)")]
		public string ManHinh
		{
			get
			{
				return this._ManHinh;
			}
			set
			{
				if ((this._ManHinh != value))
				{
					this.OnManHinhChanging(value);
					this.SendPropertyChanging();
					this._ManHinh = value;
					this.SendPropertyChanged("ManHinh");
					this.OnManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoPhanGiai", DbType="NVarChar(100)")]
		public string DoPhanGiai
		{
			get
			{
				return this._DoPhanGiai;
			}
			set
			{
				if ((this._DoPhanGiai != value))
				{
					this.OnDoPhanGiaiChanging(value);
					this.SendPropertyChanging();
					this._DoPhanGiai = value;
					this.SendPropertyChanged("DoPhanGiai");
					this.OnDoPhanGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Camera", DbType="NVarChar(100)")]
		public string Camera
		{
			get
			{
				return this._Camera;
			}
			set
			{
				if ((this._Camera != value))
				{
					this.OnCameraChanging(value);
					this.SendPropertyChanging();
					this._Camera = value;
					this.SendPropertyChanged("Camera");
					this.OnCameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpu", DbType="NVarChar(100)")]
		public string Cpu
		{
			get
			{
				return this._Cpu;
			}
			set
			{
				if ((this._Cpu != value))
				{
					this.OnCpuChanging(value);
					this.SendPropertyChanging();
					this._Cpu = value;
					this.SendPropertyChanged("Cpu");
					this.OnCpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="NVarChar(100)")]
		public string Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayPhatHanh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayPhatHanh
		{
			get
			{
				return this._NgayPhatHanh;
			}
			set
			{
				if ((this._NgayPhatHanh != value))
				{
					this.OnNgayPhatHanhChanging(value);
					this.SendPropertyChanging();
					this._NgayPhatHanh = value;
					this.SendPropertyChanged("NgayPhatHanh");
					this.OnNgayPhatHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DungLuong", DbType="NVarChar(100)")]
		public string DungLuong
		{
			get
			{
				return this._DungLuong;
			}
			set
			{
				if ((this._DungLuong != value))
				{
					this.OnDungLuongChanging(value);
					this.SendPropertyChanging();
					this._DungLuong = value;
					this.SendPropertyChanged("DungLuong");
					this.OnDungLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichThuoc", DbType="NVarChar(100)")]
		public string KichThuoc
		{
			get
			{
				return this._KichThuoc;
			}
			set
			{
				if ((this._KichThuoc != value))
				{
					this.OnKichThuocChanging(value);
					this.SendPropertyChanging();
					this._KichThuoc = value;
					this.SendPropertyChanged("KichThuoc");
					this.OnKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrongLuong", DbType="NVarChar(100)")]
		public string TrongLuong
		{
			get
			{
				return this._TrongLuong;
			}
			set
			{
				if ((this._TrongLuong != value))
				{
					this.OnTrongLuongChanging(value);
					this.SendPropertyChanging();
					this._TrongLuong = value;
					this.SendPropertyChanged("TrongLuong");
					this.OnTrongLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongCon", DbType="Int")]
		public System.Nullable<int> SoLuongCon
		{
			get
			{
				return this._SoLuongCon;
			}
			set
			{
				if ((this._SoLuongCon != value))
				{
					this.OnSoLuongConChanging(value);
					this.SendPropertyChanging();
					this._SoLuongCon = value;
					this.SendPropertyChanged("SoLuongCon");
					this.OnSoLuongConChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loai_San_Pham_id", DbType="Int")]
		public System.Nullable<int> Loai_San_Pham_id
		{
			get
			{
				return this._Loai_San_Pham_id;
			}
			set
			{
				if ((this._Loai_San_Pham_id != value))
				{
					if (this._Loai_San_Pham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoai_San_Pham_idChanging(value);
					this.SendPropertyChanging();
					this._Loai_San_Pham_id = value;
					this.SendPropertyChanged("Loai_San_Pham_id");
					this.OnLoai_San_Pham_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_ChiTiet_DonHang", Storage="_ChiTiet_DonHangs", ThisKey="id", OtherKey="SanPham_id")]
		public EntitySet<ChiTiet_DonHang> ChiTiet_DonHangs
		{
			get
			{
				return this._ChiTiet_DonHangs;
			}
			set
			{
				this._ChiTiet_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_ChiTiet_KhuyenMai", Storage="_ChiTiet_KhuyenMais", ThisKey="id", OtherKey="SanPham_id")]
		public EntitySet<ChiTiet_KhuyenMai> ChiTiet_KhuyenMais
		{
			get
			{
				return this._ChiTiet_KhuyenMais;
			}
			set
			{
				this._ChiTiet_KhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_DanhGia", Storage="_DanhGias", ThisKey="id", OtherKey="SanPham_id")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="San_Pham_Image", Storage="_Images", ThisKey="id", OtherKey="SanPham_id")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_San_Pham_San_Pham", Storage="_Loai_San_Pham", ThisKey="Loai_San_Pham_id", OtherKey="id", IsForeignKey=true)]
		public Loai_San_Pham Loai_San_Pham
		{
			get
			{
				return this._Loai_San_Pham.Entity;
			}
			set
			{
				Loai_San_Pham previousValue = this._Loai_San_Pham.Entity;
				if (((previousValue != value) 
							|| (this._Loai_San_Pham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai_San_Pham.Entity = null;
						previousValue.San_Phams.Remove(this);
					}
					this._Loai_San_Pham.Entity = value;
					if ((value != null))
					{
						value.San_Phams.Add(this);
						this._Loai_San_Pham_id = value.id;
					}
					else
					{
						this._Loai_San_Pham_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loai_San_Pham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = this;
		}
		
		private void detach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = null;
		}
		
		private void attach_ChiTiet_KhuyenMais(ChiTiet_KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = this;
		}
		
		private void detach_ChiTiet_KhuyenMais(ChiTiet_KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = null;
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = null;
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.San_Pham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonHang_id;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private System.Nullable<double> _TongTien;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonHang_idChanging(int value);
    partial void OnDonHang_idChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public ThanhToan()
		{
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHang_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DonHang_id
		{
			get
			{
				return this._DonHang_id;
			}
			set
			{
				if ((this._DonHang_id != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHang_idChanging(value);
					this.SendPropertyChanging();
					this._DonHang_id = value;
					this.SendPropertyChanged("DonHang_id");
					this.OnDonHang_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_DonHang", ThisKey="DonHang_id", OtherKey="id", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ThanhToan = null;
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ThanhToan = this;
						this._DonHang_id = value.id;
					}
					else
					{
						this._DonHang_id = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
